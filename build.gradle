buildscript {
    repositories {
        maven { url = 'https://repo.leviathan-studio.com/libs-release' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.0.2'
group = 'com.leviathanstudio' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'CraftStudioAPI'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

sourceSets {
    main {
        java {
            srcDirs 'src/main/java/'
        }
        resources {
            srcDirs 'src/main/resources/'
        }
    }
    dev {
        java {
            srcDirs 'src/dev/java/'
        }
        resources {
            srcDirs 'src/dev/resources/'
        }
    }
    mod {
        java {
            srcDirs 'src/mod/java/'
        }
        resources {
            srcDirs 'src/mod/resources/'
        }
    }
}

minecraft {

    mappings channel: 'snapshot', version: '20190719-1.14.3'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'info'

            mods {
                craftstudioapi {
					ideaModule "${rootProject.name}.main"
                    source sourceSets.main
                }
                testmod {
                    ideaModule "${rootProject.name}.mod"
                    source sourceSets.mod
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'info'

            mods {
                craftstudioapi {
					ideaModule "${rootProject.name}.main"
                    source sourceSets.main
                }
                testmod {
                    ideaModule "${rootProject.name}.mod"
                    source sourceSets.mod
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'info'

            args '--mod', 'craftstudioapi', '--mod', 'testmod', '--all', '--output', file('src/generated/resources/')

            mods {
                craftstudioapi {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.14.4-28.0.51'
}

repositories {
    maven { url = 'https://repo.leviathan-studio.com/libs-release' }
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title": "crafstudio_api",
                "Specification-Vendor": "LeviathanStudio",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"LeviathanStudio",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// we define a custom artifact that is sourced from the reobfJar output task
// and then declare that to be published
// Note you'll need to add a repository here
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}